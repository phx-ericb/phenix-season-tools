Document de Briefing : Analyse des Scripts Google Apps pour la Gestion des Données Sportives
Date : 26 octobre 2023Sujet : Vue d'ensemble des scripts Google Apps pour la gestion des inscriptions, articles, membres et rapports au sein de l'organisation sportive.
1. Vue d'ensemble et Objectifs Généraux
Les extraits de code fournis révèlent un ensemble de scripts Google Apps (probablement exécutés dans Google Sheets) conçus pour automatiser et gérer diverses opérations liées aux inscriptions, aux articles (frais/produits), aux membres, et à la génération de rapports. L'objectif principal semble être de rationaliser la gestion des données, d'améliorer la conformité des inscriptions, de suivre les transactions et de faciliter la communication avec les membres.
Ces scripts interagissent avec plusieurs feuilles de calcul (Sheets) spécifiques, telles que "Inscriptions", "ARTICLES", "U9U12", "CDP", "Suivi_Relances", "Suivi Courriel Log", "Rétroaction", "Rétro - Membres", "Import Rétro - Groupes", "Rétro - Groupe Articles", "Rapports inscriptions", "INSCRIPTIONS_ANNULÉES", et "ARTICLES_ANNULÉS".
2. Gestion des Paramètres et Configuration
Le fichier menu_parametres.txt décrit comment les paramètres clés sont sauvegardés et récupérés à l'aide de PropertiesService. Cela permet de rendre les scripts configurables sans modifier directement le code.
Paramètres configurables incluent :
•
idDossier : ID du dossier Drive où les fichiers sont traités.
•
nomFichierInscriptions et nomFichierArticles : Noms des fichiers source pour les inscriptions et les articles.
•
debugActif : Active/désactive le mode débogage pour un logging détaillé.
•
checkDuplicates : Active/désactive la vérification des doublons d'articles pour un même membre.
•
checkCDPConflict : Active/désactive la détection de conflits pour les options "1 entraînement CDP" et "2 entraînements CDP".
•
reglesArticles : Règles définies pour les articles, probablement pour valider l'année de naissance par rapport à un article spécifique.
•
suivisCourriel : Configuration des courriels de suivi automatisés (secteur, destinataires, liens, message, date butoir, mode simulation).
Une fonction getListeArticlesUnique() est également présente, qui extrait les noms d'articles uniques de la colonne F de la feuille "ARTICLES".
3. Traitement et Validation des Données (Fichier )
Ce script est crucial pour la validation des données d'inscription et la détection d'erreurs. Il utilise les reglesArticles pour s'assurer que l'année de naissance des inscrits correspond aux articles choisis.
Fonctionnalités clés :
•
Normalisation des données : Toutes les chaînes sont converties en minuscules et les espaces sont supprimés (str.trim().toLowerCase()) pour des comparaisons cohérentes.
•
Filtrage des annulations : Les lignes avec le statut "Annulé" sont ignorées dès le début du traitement.
•
Validation de l'année de naissance : Pour chaque frais (nomFrais), l'année de naissance de l'inscrit est vérifiée par rapport aux allowedYears définies dans mappingRules. Si une incohérence est trouvée, une erreur est ajoutée : "Année de naissance non valide pour [Nom du frais] (attendu: [années valides])".
•
Détection des doublons d'articles : Si checkDuplicates est activé, le script identifie si un membre a acheté le même article plusieurs fois. Message d'erreur : "Article '[Nom du frais]' est en doublon pour ce membre".
•
Détection de conflit CDP : Si checkCDPConflict est activé, le script vérifie si un membre a choisi à la fois "1 entraînement CDP par semaine (U9 à U12)" et "2 entraînements CDP par semaine (U9 à U12)". Message d'erreur : "Choix multiple pour entraînement CDP : veuillez choisir soit 1, soit 2 CDP".
•
Consolidation des erreurs : Les erreurs sont regroupées par membre et article, puis écrites dans une feuille de sortie (probablement "Erreurs") avec la ligne de données originale et une colonne contenant les erreurs concaténées.
4. Rapports Spécifiques et Exports
Plusieurs scripts sont dédiés à la génération de rapports et à l'exportation de données dans des formats spécifiques (notamment XLSX).
4.1. Rapport d'Articles ()
Ce rapport analyse les articles (frais) basés sur la feuille "ARTICLES".
•
Section 1 : Détail par article, statut et année de naissance. Structure : details[article] = { "Validé": { année: count }, "Annulé": { année: count } }. Permet de voir la répartition des inscriptions par article, leur statut et l'année de naissance des inscrits.
•
Section 2 : Historique des transactions par jour (Top 5 articles par jour). Affiche les 5 articles les plus vendus par jour, y compris leur proportion par rapport au total quotidien.
•
Section 3 : Totaux par article (Validé vs Annulé). Résume le nombre total d'articles validés et annulés, et calcule le pourcentage d'annulation pour chaque article.
•
Le rapport est généré dans une feuille et formate les pourcentages.
4.2. Rapport d'Annulations ()
Ce script traite les données des feuilles "ARTICLES" et "Inscriptions" pour identifier et consolider les annulations.
•
Il vise à lister les membres ayant des articles ou inscriptions annulés.
•
Les informations collectées incluent le passeport, prénom, nom, date de naissance, frais annulés et dates d'annulation.
•
Les données sont écrites dans des feuilles "INSCRIPTIONS_ANNULÉES" et "ARTICLES_ANNULÉS", après avoir effacé les données précédentes (conservant l'en-tête).
4.3. Rapport CDP Complet ()
Ce rapport génère un aperçu des achats CDP (Centre de Développement de Joueurs) et les compare aux effectifs totaux des équipes.
•
Il lit les données des feuilles purchaseSheetName (achats CDP) et rosterSheetName (joueurs inscrits).
•
Il regroupe les achats CDP (1 entraînement vs 2 entraînements) et les effectifs par catégorie d'équipe (ex: U09 F D1).
•
Le rapport final, nommé "Rapport CDP Complet", inclut : "Catégorie", "Total membres", "CDP1", "CDP1%", "CDP2", "CDP2%", "Sans CDP", "Sans CDP%". Les pourcentages sont formatés.
4.4. Rapports Inscriptions ()
Ce script génère un rapport statistique détaillé basé sur la feuille "Inscriptions".
•
Indicateurs clés calculés :
?
totalInscriptions
?
itemCounts (nombre d'items vendus par Nom du frais)
?
paymentCounts (répartition par méthode de paiement)
?
statusCounts (répartition par statut d'inscription)
?
yearOfBirthCounts (répartition par année de naissance)
?
historical (inscriptions par date de facture)
?
genreCounts (répartition par genre : Masculin, Féminin, Autres)
•
Le rapport est écrit dans une feuille nommée "Rapports inscriptions".
4.5. Rétro - Groupes ()
Cette fonction prépare un export de données spécifiques des inscriptions vers un fichier XLSX pour des systèmes tiers (rétroaction).
•
Exclusion de certains frais : Ignore les articles contenant "D1+", "LDP", "Ligue", "senior", "adulte", "U-SÉ" dans leur nom.
•
Conversion de groupe/catégorie : Utilise une fonction convertirGroupeCategorie pour mapper le nomArticle à un groupe et une categorie. Une logique spécifique est appliquée pour le "Soccer Adapté".
•
Génère une feuille temporaire "Import Rétro - Groupes" puis l'exporte en XLSX.
•
Le fichier XLSX est sauvegardé dans un dossier Drive spécifié (13k4TQLG_qJV2YKD_mFA2xCoJV-A5qd3X).
•
Met à jour une feuille "Rétroaction" pour l'historique des exports.
4.6. Rétro - Groupe Articles ()
Génère un rapport et un export XLSX des articles groupés par catégories d'âge et types de programme.
•
Exclusion des annulations : Ignore les lignes avec un statut "Annulé".
•
Détermination de la catégorie d'âge : Utilise getAgeCategory(birthYear) pour mapper l'année de naissance à des catégories Uxx (U04 à U19).
•
Logique de groupement spécifique :
?
"Programme Futsal U9-U12 - session printemps" : groupes comme "Futsal U09-U10M", "Futsal U11-U12F".
?
"U4 à U6 (5 activités supplémentaires)" : groupe "U04-U06 - 5 séances supplémentaires".
?
"Camp de sélection U13-U18" : Groupes spécifiques par âge et genre (ex: "Camp U13M", "Camp U16-U17-U18F").
?
"2 entraînements CDP par semaine" : Groupes comme "U09M CDP2" (pour U9-U12 seulement).
•
Les lignes qui ne correspondent à aucune de ces règles spécifiques sont ignorées.
•
L'export est au format XLSX, contenant Passeport, Nom, Prénom, Date de naissance, Groupe, et Catégorie.
4.7. Rétro - Membres ()
Ce script génère un rapport consolidé sur les membres, combinant les informations des feuilles "Inscriptions" et "ARTICLES", et potentiellement une feuille "Mutation".
•
Collecte d'informations : Récupère les passeports, noms, prénoms, dates de naissance, genres, emails, et dates de facture.
•
Priorisation des données : Si un membre est présent dans "Inscriptions" et "ARTICLES", les informations de "Inscriptions" (comme la date de facture) sont privilégiées.
•
Détection d'attributs spécifiques :
?
adapte : Si un frais "adapté" est trouvé dans "Inscriptions".
?
cdp : Indique le nombre d'entraînements CDP (1 ou 2) trouvés dans "ARTICLES".
?
camp : Indique si un "camp de sélection U13" est trouvé dans "ARTICLES".
?
mutated : Vérifie si le passeport est listé dans une feuille "Mutation".
•
Normalisation CDP pour U9-U12 : Pour les membres âgés de 9 à 12 ans (sauf ceux en soccer adapté), si aucune option CDP n'est définie, la valeur cdp est forcée à 0.
•
Le rapport final ("Rétro - Membres") contient un grand nombre de colonnes d'informations standardisées (nom, prénom, courriels, adresses, parents, etc.) pour chaque membre.
•
Un export XLSX est généré pour ce rapport.
•
Fonction de Suivi U9-U12 : Le script inclut également une section pour le suivi des nouvelles inscriptions U9-U12.
?
Il crée/met à jour des feuilles de suivi (ex: "Suivi U9-U12") pour différentes configurations d'âge et de genre.
?
Les membres sont loggués avec leur passeport, nom, prénom, date de naissance, catégorie, date de facture et date de génération du log.
?
Les informations sont utilisées pour envoyer des courriels de relance (voir section 5).
5. Suivi et Communication Automatisée
Deux scripts gèrent les processus de communication automatisés.
5.1. Suivi CDP ()
Ce script envoie des rappels aux membres U9-U12 qui n'ont pas encore choisi d'option d'entraînement CDP.
•
Sources de données : "U9U12", "CDP", et "Suivi_Relances".
•
Logic :
1.
Identifie les passeports qui ont une option CDP enregistrée dans la feuille "CDP".
2.
Charge les entrées d'e-mails déjà envoyées depuis "Suivi_Relances" pour éviter les doublons.
3.
Parcourt la feuille "U9U12". Pour chaque membre, si son passeport n'est PAS dans l'ensemble des cdpPasseports et qu'un e-mail n'a pas déjà été envoyé pour cette inscription :
?
Un e-mail est préparé avec un sujet ("Confirmation de votre inscription - Options d'entraînement") et un corps de message informant le parent de l'absence d'option CDP et ses conséquences (placement en D3 récréatif).
?
Un fichier PDF (12xITXx6uwKtw7DyU_DAZbSO9b3cYDRFp) est joint, décrivant la procédure à suivre.
?
L'envoi est enregistré dans "Suivi_Relances" avec la date d'envoi et le statut ("ENVOYE" ou "TEST" si testMode est true).
4.
Mise à jour des statuts : Pour les entrées dans "Suivi_Relances" dont le passeport apparaît maintenant dans "CDP", le statut est mis à jour en "Régularisé" et la date de régularisation est ajoutée.
•
Utilise getDisplayValues() pour préserver le formatage (ex: zéros initiaux) lors de la lecture des données.
5.2. Suivi Courriel Automatisé ()
Ce script envoie des courriels de suivi génériques aux nouveaux inscrits basés sur des configurations définies par l'utilisateur.
•
Configuration : Les paramètres de suivi sont stockés via PropertiesService (suivisCourriel) et incluent le secteur (catégorie d'âge/genre), les adresses e-mail, les liens à inclure, le message et une date butoir.
•
Secteurs d'application : Les inscriptions sont regroupées par catégories d'âge spécifiques (U4-U6, U7-U8, U9, U10, U11, U12, U13, U14-U15, U16-U19) basées sur le "Nom du frais" (colonne L).
•
Logique d'envoi :
1.
Calcule la plus petite date butoir parmi toutes les configurations pour une optimisation globale.
2.
Conserve un log des e-mails déjà envoyés dans la feuille "Suivi Courriel Log" (clé composite : passeport-secteur) pour éviter les envois multiples.
3.
Parcourt les inscriptions :
?
Ignore les inscriptions antérieures à la date butoir la plus ancienne.
?
Détermine le secteur de l'inscription.
?
Pour chaque configuration de suivi correspondant au secteur, vérifie la date butoir spécifique à cette configuration.
?
Si l'inscription est valide et l'e-mail n'a pas déjà été envoyé, le courriel est préparé et envoyé.
?
Le destinataire est extrait des colonnes G, H ou J de la ligne d'inscription.
?
Le message peut inclure des liens définis dans la configuration.
?
L'expéditeur est "Phénix des Rivières".
?
Les envois sont loggués dans "Suivi Courriel Log".
6. Fonctionnalités Auxiliaires
•
Conversion Excel vers Google Sheets : La fonction convertirEtImporterExcel (dans copy_rapport_spordle.txt) permet d'importer des fichiers Excel et de les convertir en Google Sheets, un élément crucial pour l'intégration des données sources. Elle identifie le type de fichier (Inscriptions ou Articles) basé sur les noms de fichiers configurés.
•
Normalisation des valeurs et des dates : Des fonctions utilitaires (normalize, formatDateShort, Utilities.formatDate) sont utilisées à travers les scripts pour assurer la cohérence des données et des formats.