/*******************************
 * CONVERSION DU NOM D'ARTICLE
 *******************************/
function convertirGroupeCategorie(nomArticle) {
  if (!nomArticle) return { groupe: "", categorie: "" };
  var lower = nomArticle.toLowerCase();
  // Gestion spécifique pour Soccer Adapté
  if (lower.indexOf("soccer adapté u13+") !== -1 || lower.indexOf("soccer adapté junior") !== -1) {
    return { groupe: "Adapté (tous)", categorie: "Adapté" };
  }
  // Conversion standard pour les inscriptions du type "U-13 Féminin - Saison estivale"
  var regex = /^U[-\s]?(\d{2})\s*(F[ée]minin|M[âa]sculin)/i;
  var match = nomArticle.match(regex);
  if (match) {
    var age = match[1];
    var genreLettre = match[2].charAt(0).toUpperCase();
    // Inversion des formats : colonne I (Groupe) = sans espace, colonne J (Catégorie) = avec espace
    var groupe = "U" + age + genreLettre;
    var categorie = "U" + age + " " + genreLettre;
    return { groupe: groupe, categorie: categorie };
  } else {
    return { groupe: "", categorie: "" };
  }
}

/*******************************
 * FONCTION D'EXPORT POUR RÉTROACTION ET GÉNÉRATION D'UN FICHIER XLSX
 *******************************/
function genererImportRetroGroupes() {
  var ui = SpreadsheetApp.getUi();
  
  // Accès à l'onglet Inscriptions
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var inscriptionsSheet = ss.getSheetByName("Inscriptions");
  if (!inscriptionsSheet) {
    ui.alert("L’onglet 'Inscriptions' est introuvable.");
    return;
  }
  
  // Lecture des données de A à Z (26 colonnes)
  var lastRow = inscriptionsSheet.getLastRow();
  if (lastRow < 2) {
    ui.alert("Aucune inscription disponible.");
    return;
  }
  var dataRange = inscriptionsSheet.getRange(1, 1, lastRow, 26);
  var data = dataRange.getValues();
  
  // Préparation de l'export dans l'onglet "Import Rétro - Groupes"
  // On ajoute la ligne d'en-tête dans le fichier généré.
  var headerRow = [["Identifiant unique", "Nom", "Prénom", "Date de naissance", "#", "Couleur", "Sous-groupe", "Position", "Équipe/Groupe", "Catégorie"]];
  var exportRows = [];
  
  // Parcourir les inscriptions (à partir de la 2ème ligne)
  for (var i = 1; i < data.length; i++) {
    var row = data[i];
    
    // Exclure les inscriptions avec le statut "Annulé" (colonne W, index 22)
    var statut = row[22];
    if (statut && statut.toString().trim().toLowerCase() === "annulé") {
      continue;
    }
    
    // Extraction des champs
    var passeport = row[0];      // Identifiant unique
    var nom = row[2];            // Nom
    var prenom = row[1];         // Prénom (ordre modifié si besoin)
    var dateNaissance = row[3];  // Date de naissance
    // Le nom du frais se trouve en colonne L (index 11)
    var nomArticle = row[11];
    
    // Ignorer les inscriptions "Élite" dont le nom du frais contient "D1+", "LDP" ou "Ligue"
    if (nomArticle && (nomArticle.indexOf("D1+") !== -1 || nomArticle.indexOf("LDP") !== -1 || nomArticle.indexOf("Ligue") !== -1)) {
      continue;
    }
    // Exclure les inscriptions dont le nom du frais contient "senior", "adulte" ou "ligue" (insensible à la casse)
    if (nomArticle && (nomArticle.toLowerCase().indexOf("senior") !== -1 ||
                      nomArticle.toLowerCase().indexOf("adulte") !== -1 ||
                      nomArticle.toLowerCase().indexOf("u-sé") !== -1 ||
                      nomArticle.toLowerCase().indexOf("ligue") !== -1)) {
      continue;
}
    
    var conversion = convertirGroupeCategorie(nomArticle);
    
    // Préparer la ligne d'export (tableau à 10 colonnes)
    // Les colonnes 5 à 8 resteront vides (#, Couleur, Sous-groupe, Position)
    var exportRow = [];
    exportRow[0] = passeport;
    exportRow[1] = nom;
    exportRow[2] = prenom;
    exportRow[3] = dateNaissance;
    exportRow[4] = ""; // #
    exportRow[5] = ""; // Couleur
    exportRow[6] = ""; // Sous-groupe
    exportRow[7] = ""; // Position
    exportRow[8] = conversion.groupe;    // Équipe/Groupe
    exportRow[9] = conversion.categorie; // Catégorie
    
    exportRows.push(exportRow);
  }
  
  // Accès ou création de l'onglet "Import Rétro - Groupes"
  var importSheet = ss.getSheetByName("Import Rétro - Groupes");
  if (!importSheet) {
    importSheet = ss.insertSheet("Import Rétro - Groupes");
  }
  // Effacer les anciennes données
  importSheet.clearContents();
  // Inscrire l'en-tête en première ligne
  importSheet.getRange(1, 1, 1, headerRow[0].length).setValues(headerRow);
  // Écrire les données à partir de la ligne 2
  if (exportRows.length > 0) {
    importSheet.getRange(2, 1, exportRows.length, exportRows[0].length).setValues(exportRows);
  }
  
  // Forcer la première colonne (Identifiant unique) en format texte
  var totalRows = exportRows.length > 0 ? exportRows.length + 1 : 1;
  importSheet.getRange(2, 1, totalRows - 1, 1).setNumberFormat("@");
  
  importSheet.autoResizeColumns(1, headerRow[0].length);
  
  // Mettre l'onglet "Import Rétro - Groupes" actif
  ss.setActiveSheet(importSheet);
  
  // Mise à jour de l'onglet "Rétroaction" pour l'historique
  var retroSheet = ss.getSheetByName("Rétroaction");
  if (!retroSheet) {
    retroSheet = ss.insertSheet("Rétroaction");
    retroSheet.appendRow(["Date du rapport", "Nombre d'inscriptions exportées"]);
  }
  var nbExport = exportRows.length;
  var reportDateStr = Utilities.formatDate(new Date(), ss.getSpreadsheetTimeZone(), "dd/MM/yyyy HH:mm");
  retroSheet.appendRow([reportDateStr, nbExport]);
  
  // -------------------------------
  // Génération du fichier XLSX
  // -------------------------------
  // Créer un nouveau spreadsheet temporaire et y copier la feuille d'export
  var tempSpreadsheet = SpreadsheetApp.create("Export temporaire - Import Retro Groupes");
  var tempSheet = importSheet.copyTo(tempSpreadsheet);
  tempSheet.setName("Export");
  // Supprimer la feuille vide par défaut du nouveau spreadsheet
  var sheetsTemp = tempSpreadsheet.getSheets();
  if (sheetsTemp.length > 1) {
    for (var j = 0; j < sheetsTemp.length; j++) {
      if (sheetsTemp[j].getSheetId() !== tempSheet.getSheetId()) {
        tempSpreadsheet.deleteSheet(sheetsTemp[j]);
      }
    }
  }
  
  // Construire l'URL d'export en format XLSX
  var tempFileId = tempSpreadsheet.getId();
  var url = "https://docs.google.com/spreadsheets/d/" + tempFileId + "/export?format=xlsx";
  var options = {
    headers: {
      "Authorization": "Bearer " + ScriptApp.getOAuthToken()
    }
  };
  var response = UrlFetchApp.fetch(url, options);
  var blob = response.getBlob();
  
  // Formatage de la date et de l'heure pour le nom du fichier (jjmmaaaa_hh:mm)
  var dateNow = new Date();
  var formattedDate = Utilities.formatDate(dateNow, ss.getSpreadsheetTimeZone(), "ddMMyyyy_HH:mm");
  var fileName = "Export_Retro_Groupes_" + formattedDate + ".xlsx";
  
  blob.setName(fileName);
  
  // Enregistrer le fichier dans le dossier de destination spécifié
  var destFolder = DriveApp.getFolderById("13k4TQLG_qJV2YKD_mFA2xCoJV-A5qd3X");
  var xlsxFile = destFolder.createFile(blob);
  
  // Optionnel : Supprimer le spreadsheet temporaire
  DriveApp.getFileById(tempFileId).setTrashed(true);
  
  ui.alert("L'export Rétro - Groupes a été généré avec succès.\nNombre d'inscriptions exportées : " 
           + nbExport + "\nFichier XLSX créé dans le dossier spécifié : " + xlsxFile.getName());
}