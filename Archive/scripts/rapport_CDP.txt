/**
 * Génère un rapport complet CDP incluant le total de membres et les pourcentages CDP1/CDP2/Sans CDP.
 * Lit deux onglets :
 *  - un onglet achats CDP (Nom : TON_ONGLET_SOURCE)
 *  - un onglet liste des joueurs (Nom : Joueurs Équipe CDP)
 * Produit un onglet "Rapport CDP Complet" prêt pour Looker Studio.
 */
function genererRapportCDPComplet() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var purchaseSheetName = 'Données CDP';   // nom de l'onglet des achats CDP
  var rosterSheetName   = 'Joueurs Équipe CDP'; // nom de l'onglet des joueurs

  var purchaseSheet = ss.getSheetByName(purchaseSheetName);
  var rosterSheet   = ss.getSheetByName(rosterSheetName);
  if (!purchaseSheet || !rosterSheet) {
    SpreadsheetApp.getUi().alert('Vérifiez que les onglets "' + purchaseSheetName + '" et "' + rosterSheetName + '" existent.');
    return;
  }

  // Lecture des achats CDP
  var buyData = purchaseSheet.getDataRange().getValues();
  var buyHeaders = buyData.shift();
  var iFrais     = buyHeaders.indexOf('Nom du frais');
  var iEquipeBuy = buyHeaders.indexOf('Nom de l\'équipe');

  // Lecture des joueurs roster
  var plyData = rosterSheet.getDataRange().getValues();
  var plyHeaders = plyData.shift();
  var iEquipePly = plyHeaders.indexOf('Équipes');

  // Comptages des achats
  var purchaseSummary = {};
  buyData.forEach(function(r) {
    var frais  = (r[iFrais] || '').toString();
    var equipe = (r[iEquipeBuy] || '').toString();
    var m = equipe.match(/U(\d{1,2})([FM])\s*D(\d+)/i);
    if (!m) return;
    // Pad âge pour deux chiffres
    var ageNum = parseInt(m[1], 10);
    var ageStr = ageNum < 10 ? '0' + ageNum : '' + ageNum;
    var gen = m[2].toUpperCase();
    var div = m[3];
    var cat = 'U' + ageStr + ' ' + gen + ' D' + div;
    if (!purchaseSummary[cat]) purchaseSummary[cat] = {cdp1:0, cdp2:0};
    if (/^1 entraînement/i.test(frais)) purchaseSummary[cat].cdp1++;
    else if (/^2 entraînements/i.test(frais)) purchaseSummary[cat].cdp2++;
  });

  // Comptages des effectifs
  var rosterCounts = {};
  plyData.forEach(function(r) {
    var equipe = (r[iEquipePly] || '').toString();
    var m = equipe.match(/U(\d{1,2})([FM])\s*D(\d+)/i);
    if (!m) return;
    var ageNum = parseInt(m[1], 10);
    var ageStr = ageNum < 10 ? '0' + ageNum : '' + ageNum;
    var gen = m[2].toUpperCase();
    var div = m[3];
    var cat = 'U' + ageStr + ' ' + gen + ' D' + div;
    rosterCounts[cat] = (rosterCounts[cat] || 0) + 1;
  });

  // Création onglet rapport
  var reportName = 'Rapport CDP Complet';
  var report = ss.getSheetByName(reportName);
  if (report) ss.deleteSheet(report);
  report = ss.insertSheet(reportName);

  var headers = ['Catégorie','Total membres','CDP1','CDP1%','CDP2','CDP2%','Sans CDP','Sans CDP%'];
  report.appendRow(headers);

  // Remplissage trié
  Object.keys(rosterCounts).sort().forEach(function(cat) {
    var total = rosterCounts[cat] || 0;
    var c1    = (purchaseSummary[cat] || {}).cdp1 || 0;
    var c2    = (purchaseSummary[cat] || {}).cdp2 || 0;
    var noCdp = total - c1 - c2;
    report.appendRow([
      cat,
      total,
      c1,
      total > 0 ? c1 / total : 0,
      c2,
      total > 0 ? c2 / total : 0,
      noCdp,
      total > 0 ? noCdp / total : 0
    ]);
  });

  // Format pourcentages
  var last = report.getLastRow();
  if (last > 1) {
    report.getRange(2, 4, last - 1, 1).setNumberFormat('0.00%');
    report.getRange(2, 6, last - 1, 1).setNumberFormat('0.00%');
    report.getRange(2, 8, last - 1, 1).setNumberFormat('0.00%');
  }
  report.autoResizeColumns(1, headers.length);
}
