{
  "library-si\\src\\utils.js": [
    "_isCancelledStatus_",
    "_loadUnifiedGroupMappings_",
    "_normGenreCell",
    "_normMapGenre",
    "_norm_",
    "_paramOr_",
    "_t",
    "_toIntOrNull",
    "appendImportLog_",
    "birthYearFromRow_",
    "buildKeyFromRow_",
    "bytesToHex_",
    "collectEmailsFromRow_",
    "computeRowHash_",
    "computeUForYear_",
    "deriveSectorFromRow_",
    "deriveUFromRow_",
    "enqueueOutboxRows_",
    "ensureArchiveSubfolder_",
    "ensureCoreSheets_",
    "ensureMailOutbox_",
    "ensureSubfolderUnder_",
    "getHeadersIndex_",
    "getKeyColsFromParams_",
    "getMailOutboxHeaders_",
    "getSeasonSpreadsheet_",
    "getSheetOrCreate_",
    "idx",
    "isKeyComplete_",
    "isRowCompletelyEmpty_",
    "jsonCompact_",
    "listActiveOccurrencesForPassport_",
    "moveFileIdToFolderIdV3_",
    "normLower_",
    "norm_",
    "normalizePassportPlain8_",
    "normalizePassportToText8_",
    "overwriteSheet_",
    "parseSeasonYear_",
    "prefixFirstColWithApostrophe_",
    "readParam_",
    "readSheetAsObjects_",
    "setCancelFlags_",
    "setSeasonIdGlobalOnce",
    "writeStaging_"
  ],
  "library-si\\src\\rules.js": [
    "_articleDupKey_",
    "_psKey_",
    "buildInscDupKey_",
    "dict_",
    "evaluateSeasonRules",
    "idx",
    "isActive_",
    "isAdapteMember_",
    "loadArticlesCatalog_",
    "norm",
    "shouldWrite_",
    "writeErr_"
  ],
  "library-si\\src\\retro_membres.js": [
    "_computePhotoCell_",
    "_containsAny_",
    "_csvEsc_",
    "_extractBirthYearLoose_",
    "_feeIgnored_",
    "_isActiveRow_",
    "_loadArticlesCatalog_",
    "_loadMutationsSet_",
    "_nrmLower_",
    "_nrm_",
    "_r_getFieldText_",
    "_r_matchWhen_",
    "_r_normLower_",
    "_safeDate_",
    "_yyyy_mm_dd_",
    "applyRetroMemberRules_",
    "applyRetroRowRules_",
    "buildRetroMembresRows",
    "ensureMember_",
    "exportRetroMembresXlsxToDrive",
    "loadRetroRules_",
    "match_",
    "writeRetroMembresSheet"
  ],
  "library-si\\src\\retro_groupes_articles.js": [
    "_aliasMatchExplain_",
    "_applyUnifiedMapping_",
    "_dbg_",
    "_findArticleMappingCandidates_",
    "_ga_U_",
    "_ga_ageCat_",
    "_ga_applyRowRulesMaybeSkip_",
    "_ga_buildMemberIndex_",
    "_ga_computeUandU2_",
    "_ga_containsAny_",
    "_ga_deriveAgeYear_",
    "_ga_extractGenreSmart_",
    "_ga_extractUFromFeeText_",
    "_ga_isActiveArticle_",
    "_ga_loadRules_",
    "_ga_low_",
    "_ga_norm_passport_",
    "_ga_nrm_",
    "_ga_pad2_",
    "_ga_tpl_",
    "_low_",
    "_nrmLow",
    "_writeRetroErrors_",
    "buildRetroGroupeArticlesRows",
    "ensure",
    "exportRetroGroupeArticlesXlsxToDrive",
    "mergeFromRow",
    "writeRetroGroupeArticlesSheet"
  ],
  "library-si\\src\\retro_groupes.js": [
    "_applyUnifiedMapping_",
    "_low_",
    "_rg_U_",
    "_rg_ageCat_",
    "_rg_applyRowRulesMaybeSkip_",
    "_rg_computeUandU2_",
    "_rg_containsAny_",
    "_rg_csvEsc_",
    "_rg_deriveBirthYearFromRow_",
    "_rg_extractFromArticlePair_",
    "_rg_extractUFromArticle_",
    "_rg_genreInitiale_",
    "_rg_isActiveRow_",
    "_rg_loadRules_",
    "_rg_low_",
    "_rg_nrm_",
    "_rg_pad2_",
    "_rg_tpl_",
    "_tpl_",
    "buildRetroGroupesRows",
    "exportRetroGroupesXlsxToDrive",
    "writeRetroGroupesSheet"
  ],
  "library-si\\src\\index.js": [
    "runExportRetroMembres"
  ],
  "library-si\\src\\import.js": [
    "applyIncrementalForArticles_",
    "applyIncrementalForInscriptions_",
    "ensureSpreadsheetFromFile_",
    "extToContentType_",
    "importerDonneesSaison",
    "inferTargetFromName_",
    "initSeasonFile",
    "isConvertibleSpreadsheetMime_",
    "isSpreadsheetMime_",
    "nettoyerConversionsSaison",
    "readFirstSheetValues_",
    "scanImportFiles_"
  ],
  "library-si\\src\\email.js": [
    "_U_U2_FromRow_",
    "_attachmentsFromCsv_",
    "_composeText_",
    "_ensureMailSectorsSheet_",
    "_excludedReasonForMail_",
    "_genreInitFromRow_",
    "_loadMailSectors_",
    "_matchSectorForType_",
    "_normFold_",
    "_normText",
    "_normUpper_",
    "appendImportLog_",
    "birthYearFromRow_",
    "buildDataFromRow_",
    "collectEmailsFromRow_",
    "computeUForYear_",
    "deriveSectorFromRow_",
    "deriveUFromRow_",
    "enqueueInscriptionNewBySectors",
    "enqueueValidationEmailsByErrorCode",
    "ensureMailOutbox_",
    "fetchFinalRowByKeyHash_",
    "fillOutboxDenorm_",
    "getHeadersIndex_",
    "getMailOutboxHeaders_",
    "getSeasonSpreadsheet_",
    "getSheetOrCreate_",
    "isEmptyCol",
    "isExcludedMember_",
    "keyHashAndRowFor",
    "matchesMemberExcludeMapping_",
    "norm",
    "norm_",
    "parseSeasonYear_",
    "readParam_",
    "readSheetAsObjects_",
    "renderTemplate_",
    "resolveRecipient_",
    "sendPendingOutbox",
    "set",
    "upgradeMailOutboxForDisplay_",
    "val"
  ],
  "library-si\\src\\diff_inscriptions.js": [
    "_isCancelledStatus_",
    "buildKeyFromRow_",
    "diffInscriptions_",
    "ensureCol_",
    "ensureControlCols_",
    "ensureLogSheetWithHeaders_",
    "getKeyColsFromParams_",
    "occurrenceLabel_",
    "rowHash_",
    "rowIsActive_"
  ],
  "library-si\\src\\diff_articles.js": [
    "_isCancelledStatus_",
    "buildArticleKey_",
    "buildKeyFromRow_",
    "diffArticles_",
    "ensureCol_",
    "ensureControlCols_",
    "ensureLogSheetWithHeaders_",
    "getKeyColsFromParams_",
    "occurrenceLabel_",
    "rowHash_",
    "rowIsActive_"
  ],
  "library-si\\src\\constants.js": [],
  "library-si\\src\\admin_migration.js": [
    "b",
    "ensureCol_",
    "i",
    "migrateMappingsToUnified_",
    "oneTimeNormalizeFinalsAndRehash_",
    "parseSection",
    "s"
  ],
  "dashboard\\src\\server_utils.js": [
    "_auditLog_",
    "_coerceByType_",
    "_err",
    "_inferSeasonLabelFromTitle_",
    "_ok",
    "_registry_",
    "_upsertParam_",
    "_wrap",
    "getSeasonSpreadsheet_"
  ],
  "dashboard\\src\\server_seasons.js": [
    "cloneSeason",
    "getSeasonList",
    "registerExistingSeason",
    "setActiveSeason"
  ],
  "dashboard\\src\\server_rules.js": [
    "getRules",
    "setRules"
  ],
  "dashboard\\src\\server_params.js": [
    "getParams",
    "getParamsDetailed",
    "idxOf",
    "setParams"
  ],
  "dashboard\\src\\server_mappings.js": [
    "esc",
    "exportMappingsCsv",
    "getMappings",
    "importMappingsCsv",
    "listMappingSheets",
    "setMappings"
  ],
  "dashboard\\src\\server_mail.js": [
    "_birthYearFromRow_",
    "_computeUForYear_",
    "_findFinalRowByPassport_",
    "_genreInitFromRow_",
    "_ms_headers_",
    "_ms_readAll_",
    "_ms_sheet_",
    "_ms_writeRow_",
    "_normEmail_",
    "_parseSeasonYear_",
    "_resolveCcForRow_",
    "_resolveSubjectBody_",
    "_resolveToForRow_",
    "buildDataFromRow_",
    "cell",
    "collectEmailsFromRow_",
    "deleteMailSector",
    "deriveSectorFromRow_",
    "deriveUFromRow_",
    "duplicateMailSector",
    "getMailSectors",
    "getSeasonSpreadsheet_",
    "previewErrorForPassport",
    "previewSectorForPassport",
    "readParam_",
    "readSheetAsObjects_",
    "renderTemplate_",
    "runSendPendingOutbox",
    "sendErrorTest",
    "sendSectorTest",
    "upsertMailSector"
  ],
  "dashboard\\src\\server_logs.js": [
    "getLogs"
  ],
  "dashboard\\src\\server_exports.js": [
    "previewErrorForPassport",
    "previewExport",
    "runExport",
    "runImportDry",
    "sendErrorTest",
    "testRules"
  ],
  "dashboard\\src\\server_entrypoint.js": [
    "doGet",
    "include"
  ],
  "dashboard\\src\\server_dashboard.js": [
    "countRows_",
    "findCol_",
    "formatDate_",
    "getDashboardMetrics",
    "getRecentActivity",
    "openSeasonSpreadsheet_",
    "readTable_"
  ],
  "dashboard\\src\\mappings_test.js": [
    "_articleNameFromRow_",
    "_deriveUFromRow_",
    "_exclusiveConflict",
    "_extractBirthYear_",
    "_getMaxU_",
    "_getSeasonYear_",
    "_matchArticle_",
    "_matchMember_",
    "_minify",
    "_mt_extractGenreSmart_",
    "_norm",
    "_nrmLow",
    "_readActive_",
    "_readUnifiedMappings_",
    "_renderFmt_",
    "_toBool",
    "_toInt",
    "_u2FromU_",
    "idx",
    "testMappings"
  ],
  "dashboard\\src\\Code.js": [
    "appendImportLog_",
    "debugRetroFns",
    "debugSeasonId",
    "debug_tailImportLog",
    "getSeasonId_",
    "resetSeasonData",
    "runEvaluateRules",
    "runExportRetroGroupeArticles",
    "runExportRetroGroupes",
    "runExportRetroMembres",
    "runImportAndExports",
    "runImporterDonneesSaison",
    "seedSeasonYearOnce",
    "setParamValue",
    "setSeasonSheetIdOnce",
    "smoke_test"
  ]
}